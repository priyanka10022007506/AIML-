# -*- coding: utf-8 -*-
"""PythonBasicsAssignment_1_2420030745.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11HzxWarA7qx8WUKfrSgvr0T-IOKXqd7_
"""

# Task 1: Variables and Data Types

# To take user input for their name, age, and favorite number
name = input("Enter your name: ")
age = int(input("Enter your age: "))
favNum = int(input("Enter your favoutite number: "))

print("Hello",name+"!") # Displaying a greeting message including their name.
yearWhen100=2025+(100-age)
print("You will turn 100 in the year", yearWhen100) # Calculating the year they will turn 100 years old and displaying it.
print("Double the value of your favourite number is", favNum*2) # Doubled their favorite number and displaying the result.

# Task 2: Conditional Statements
n = int(input("Enter a number: "))

# Check even or odd
if n % 2 == 0:
    print("It is Even.")
else:
    print("It is Odd.")

# Check the nature of the number
if n > 0:
    print("It is Positive.")
elif n < 0:
    print("It is Negative.")
else:
    print("It is Zero.")

# Task 3: Loops
print("Even numbers from 1 to 50 (using for loop):")
#for i in range(2, 51, 2):
#    print(i, end=" ")

for i in range(1, 51):
  if(i%2==0): # condition to check if the number is even
    print(i)

print("-------------------------------------------------------")

print("Even numbers from 1 to 50 (using while loop):")
i = 1
while i <= 50:
   if i%2 == 0:
     print(i)
   i+=1

# Task 4: Lists and Dictionaries

# Ask the user to enter five of their favorite foods
print("Enter 5 favorite foods:")
# Create an empty list to store the foods
foods = []
# Applying loop to get the input from the user
for i in range(5):
    food = input("Food " + str(i+1) + ": ")
    foods.append(food)
#  Print the list of favorite foods
print("Your favorite foods are:", foods)
# Create a dictionary with food as keys and length of food name as values
food_lengths = {}
for food in foods:
    food_lengths[food] = len(food)
# Print the dictionary with food and their name lengths
print("Food name lengths:", food_lengths)

# Task 5: Functions

def calculate_area(shape, d1, d2=None):
    if shape == "circle":
        return 3.14 * d1 * d1
    elif shape == "rectangle":
        return d1 * d2
    elif shape == "triangle":
        return 0.5 * d1 * d2
    else:
        return 0

print("Areas:")
print("Circle area:", calculate_area("circle", 5)) # Calculating a circle with a radius of 5.
print("Rectangle area:", calculate_area("rectangle", 4, 7)) # Calculating a rectangle with a length of 4 and width of 7.
print("Triangle area:", calculate_area("triangle", 6, 8)) # Calculating a triangle with a base of 6 and height of 8.

# Task 6: String Manipulation

text = input("Enter a sentence: ")
vowels = "aeiouAEIOU"
count = 0
for ch in text:
  if ch in vowels: # Reads/Checks the vowels in the given text
    count += 1 # Counts the vowels of present
print("Number of vowels:", count)
print("Reversed sentence:", text[::-1]) # Reverse the given text using " text[::-1] "
print("Uppercase sentence:", text.upper()) # Converts the sentence into uppercase using " text.upper() "

# Task 7: File Handling
file = open("data.txt", "w") # Created the file named data.txt and written the given sentences into the file.
file.write("Hello, Python!\n")
file.write("Learning file handling.\n")
file.write("Python is fun!")
file.close() # Closed the file after writing into the file.

file = open("data.txt", "r") # Read the file i.e., data.txt.
print("Contents of the data.txt: ")
print(file.read()) # Displaying the content of the file i.e., data.txt.
file.close() # Closed the file after reading it.

# Task 8: Error Handling

#Asking the user to enter two numbers and handle the exceptions

try:
    # Get input from the user
    a = float(input("Enter the first number: "))
    b = float(input("Enter the second number: "))

    # Performing division
    div = a / b

    # Printing the result
    print("Result:", div)

except ZeroDivisionError:
    # Handling division by zero
    print("Error: Cannot divide by zero.")

except ValueError:
    # Handle invalid input
    print("Error: Please enter valid numbers / Please enter only numbers.")